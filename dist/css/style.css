/* normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers (opinionated).
   */
body {
  margin: 0; }

/**
   * Add the correct display in IE 9-.
   */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
     ========================================================================== */
/**
   * Add the correct display in IE 9-.
   * 1. Add the correct display in IE.
   */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
   * Add the correct margin in IE 8.
   */
figure {
  margin: 1em 40px; }

/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
     ========================================================================== */
/**
   * 1. Remove the gray background on active links in IE 10.
   * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
   */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
   * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
   * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
   */
b,
strong {
  font-weight: inherit; }

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder; }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
   * Add the correct font style in Android 4.3-.
   */
dfn {
  font-style: italic; }

/**
   * Add the correct background and color in IE 9-.
   */
mark {
  background-color: #ff0;
  color: #000; }

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
     ========================================================================== */
/**
   * Add the correct display in IE 9-.
   */
audio,
video {
  display: inline-block; }

/**
   * Add the correct display in iOS 4-7.
   */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Remove the border on images inside links in IE 10-.
   */
img {
  border-style: none; }

/**
   * Hide the overflow in IE.
   */
svg:not(:root) {
  overflow: hidden; }

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers (opinionated).
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible; }

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none; }

/**
   * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
   *    controls in Android 4.
   * 2. Correct the inability to style clickable types in iOS and Safari.
   */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
   * 1. Add the correct display in IE 9-.
   * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
   * Remove the default vertical scrollbar in IE.
   */
textarea {
  overflow: auto; }

/**
   * 1. Add the correct box sizing in IE 10-.
   * 2. Remove the padding in IE 10-.
   */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in IE 9-.
   * 1. Add the correct display in Edge, IE, and Firefox.
   */
details,
menu {
  display: block; }

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item; }

/* Scripting
     ========================================================================== */
/**
   * Add the correct display in IE 9-.
   */
canvas {
  display: inline-block; }

/**
   * Add the correct display in IE.
   */
template {
  display: none; }

/* Hidden
     ========================================================================== */
/**
   * Add the correct display in IE 10-.
   */
[hidden] {
  display: none; }

:root {
  --navHeight: 6.25vw; }

html {
  min-width: 300px; }

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul {
  margin: 0 0 15px;
  padding: 0; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

@font-face {
  font-family: 'Whitney Bold';
  src: url("../../assets/fonts/Whitney-Bold.otf");
  font-style: normal;
  font-weight: 700; }

@font-face {
  font-family: 'Whitney Semibold';
  src: url("../../assets/fonts/Whitney-Semibold.otf");
  font-style: normal;
  font-weight: 600; }

@font-face {
  font-family: 'Whitney Medium';
  src: url("../../assets/fonts/Whitney-Medium.otf");
  font-style: normal;
  font-weight: 500; }

.text-component .caption {
  font-family: 'Whitney Semibold';
  font-weight: 600; }

.text-component h1, .text-component h2, .text-component h3, .text-component h4, .text-component h5, .text-component h6, .accordion .toggle {
  font-family: 'Whitney Semibold';
  font-weight: 700; }

body {
  font-family: 'Whitney Medium', sans-serif; }

a {
  text-decoration: none; }

body {
  --gradientHeight: 400px;
  --imageHeight: calc(100vh - var(--gradientHeight));
  --bodyPaddingX: 17.8vw;
  --bodyPaddingBottom: 15.9vw;
  background: -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(rgba(128, 163, 156, 0.8)), to(rgba(128, 163, 156, 0.8))), url("../../assets/images/ruthie-163318-unsplash.jpg") #80a39c;
  background: linear-gradient(to bottom, transparent var(--imageHeight), rgba(128, 163, 156, 0.8) calc(var(--imageHeight) + var(--gradientHeight)), rgba(128, 163, 156, 0.8)), url("../../assets/images/ruthie-163318-unsplash.jpg") #80a39c;
  background-position: 0 0, 0 0;
  background-size: 100vw 100%, cover;
  background-repeat: no-repeat, no-repeat;
  background-attachment: scroll, fixed;
  padding: var(--navHeight) var(--bodyPaddingX) var(--bodyPaddingBottom); }

#section-title {
  --sectionTitleSize: 2.6vw;
  --sectionTitleHeight: 15vw;
  height: var(--sectionTitleHeight);
  color: #fdfffe;
  font-size: var(--sectionTitleSize);
  font-weight: 500;
  letter-spacing: 1px;
  text-transform: uppercase;
  text-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

#site-nav {
  --listWidth: 46vw;
  --listSize: 1vw;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.8)), to(transparent));
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), transparent);
  height: var(--navHeight);
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;
  color: #fdfffe;
  font-size: var(--listSize);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  #site-nav ul {
    width: var(--listWidth);
    list-style: none;
    padding-left: 0;
    margin-bottom: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between; }
  #site-nav a {
    color: #fdfffe; }

#search {
  --searchRight: 5vw;
  height: 100%;
  background-color: transparent;
  border: none;
  color: #fdfffe;
  cursor: pointer;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  right: var(--searchRight); }

#main-nav {
  --mainNavHeight: 7.1vw;
  --mainNavMarginBottom: 3.6vw;
  --mainNavSz: 1vw;
  height: var(--mainNavHeight);
  margin-bottom: var(--mainNavMarginBottom);
  font-size: var(--mainNavSz); }
  #main-nav ul {
    height: 100%;
    list-style: none;
    padding-left: 0;
    margin-bottom: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    #main-nav ul li {
      -ms-flex-preferred-size: 25%;
      flex-basis: 25%;
      height: 100%; }
      #main-nav ul li:not(:last-child) {
        border-right: 1px solid rgba(253, 255, 254, 0.2); }
      #main-nav ul li:not(:first-child) {
        border-left: 1px solid rgba(253, 255, 254, 0.2); }
      #main-nav ul li:not(.active) {
        background-color: rgba(46, 58, 58, 0.8); }
      #main-nav ul li.active {
        background-color: rgba(5, 99, 125, 0.8); }
    #main-nav ul a {
      height: 100%;
      width: 100%;
      color: #fdfffe;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center; }

main {
  --mainPaddingX: 7.1vw;
  --mainPaddingY: 6.8vw;
  width: 100%;
  padding: var(--mainPaddingY) var(--mainPaddingX);
  background-color: rgba(46, 58, 58, 0.8);
  color: #fdfffe; }

.text-component {
  --textPaddingX: 6.4vw;
  padding: 0 var(--textPaddingX); }
  .text-component .caption {
    --captionLine: 2.5vw;
    --captionSize: 1.3vw;
    --captionMarginBottom: 3.6vw;
    font-size: var(--captionSize);
    line-height: var(--captionLine);
    margin-bottom: var(--captionMarginBottom); }
  .text-component h1, .text-component h2, .text-component h3, .text-component h4, .text-component h5, .text-component h6 {
    --headingSize: 1.3vw;
    --headingMarginBottom: 2vw;
    font-size: var(--headingSize);
    margin-bottom: var(--headingMarginBottom); }
  .text-component p {
    --pSize: 1vw;
    --pLine: 2vw;
    --pMarginBottom: 1.4vw;
    font-size: var(--pSize);
    line-height: var(--pLine);
    margin-bottom: var(--pMarginBottom); }
  .text-component a {
    color: inherit;
    text-decoration: underline; }

.image-component {
  --imagePaddingTop: 3.6vw;
  --imagePaddingBottom: 8.2vw;
  width: 100%;
  margin: var(--imagePaddingTop) 0 var(--imagePaddingBottom); }

.accordion {
  --accordionMarginTop: 5.5vw;
  margin-top: var(--accordionMarginTop); }
  .accordion .toggle {
    --toggleHeight: 7.1vw;
    --toggleSize: 1.3vw;
    --togglePaddingX: 3.6vw;
    height: var(--toggleHeight);
    border: none;
    width: 100%;
    background-color: transparent;
    color: #fdfffe;
    font-size: var(--toggleSize);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    border-bottom: 2px solid rgba(253, 255, 254, 0.2);
    padding: 0 var(--togglePaddingX);
    cursor: pointer; }
    .accordion .toggle > * {
      height: 100%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; }
  .accordion .open {
    background-color: #05637d;
    border: none; }
  .accordion .text-component {
    --textPaddingY: 7vw;
    padding: var(--textPaddingY);
    background-color: #ececec;
    color: #343434; }
  .accordion .visually-hidden {
    /* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px);
    /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsInNldHRpbmdzL192YXJpYWJsZXMuc2NzcyIsInNldHRpbmdzL19nbG9iYWwuc2NzcyIsInNldHRpbmdzL190eXBvZ3JhcGh5LnNjc3MiLCJjb21wb25lbnRzL2JvZHkvX2JvZHkuc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19oZWFkZXIuc2NzcyIsInNldHRpbmdzL19jb2xvcnMuc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyL19zaXRlLW5hdi5zY3NzIiwiY29tcG9uZW50cy9oZWFkZXIvX21haW4tbmF2LnNjc3MiLCJjb21wb25lbnRzL21haW4vX21haW4uc2NzcyIsImNvbXBvbmVudHMvc3ViLWNvbXBvbmVudHMvX3RleHQuc2NzcyIsImNvbXBvbmVudHMvc3ViLWNvbXBvbmVudHMvX2ltYWdlLnNjc3MiLCJjb21wb25lbnRzL3N1Yi1jb21wb25lbnRzL19hY2NvcmRpb24uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyRUFBMkU7QUFFM0U7Z0ZBQ2dGO0FBRWhGOzs7O0dBSUc7QUFFRjtFQUNHLGtCQUFpQjtFQUFFLE9BQU87RUFDMUIsMkJBQTBCO0VBQUUsT0FBTztFQUNuQywrQkFBOEI7RUFBRSxPQUFPLEVBQ3hDOztBQUVEO2tGQUNnRjtBQUVoRjs7S0FFRztBQUVIO0VBQ0UsVUFBUyxFQUNWOztBQUVEOztLQUVHO0FBRUg7Ozs7OztFQU1FLGVBQWMsRUFDZjs7QUFFRDs7O0tBR0c7QUFFSDtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFDakI7O0FBRUQ7a0ZBQ2dGO0FBRWhGOzs7S0FHRztBQUVIOzs7RUFFTyxPQUFPO0VBQ1osZUFBYyxFQUNmOztBQUVEOztLQUVHO0FBRUg7RUFDRSxpQkFBZ0IsRUFDakI7O0FBRUQ7OztLQUdHO0FBRUg7RUFDRSxnQ0FBdUI7RUFBdkIsd0JBQXVCO0VBQUUsT0FBTztFQUNoQyxVQUFTO0VBQUUsT0FBTztFQUNsQixrQkFBaUI7RUFB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QkFBOEI7SUFDOUIsZUFBZTtJQUNmLDZCQUFXO0lBQ1gscUJBQVE7SUFBUixxQkFBUTtJQUFSLGNBQVE7SUF0QmhCLDBCQXdCYztJQXhCZCx1QkF3QmM7SUF4QmQsK0JBd0JjO0ladWtCVixrRFl0a0JvQjtJWnVrQnBCLGlDWXRrQnFCO0ladWtCckIsZ0JZdGtCcUIsRUFBQTtJQTNCekI7TUFpQ1EsYUFBQTtNQUNBLHFCQUNIO01BREcscUJBQ0g7TUFERyxjQUNIO01BbkNMLDBCQXFDSTtNQXJDSix1QkFxQ0k7TUFyQ0osb0JBcUNJLEVBQWU7RVppa0JqQjtJWTlqQk0sMEJBQVM7SUFDVCxhQUFBLEVBQUE7RVpna0JOO0lZem1CRixvQkE4Q0k7SUFDSSw2QkFBQTtJQUNBLDBCQUFVO0lBQ1YsZUFBVyxFQUFBO0VaNmpCakI7SVkzakJNLDZFQUFnQjtJQUNoQiw4QkFBMkI7SUFBRSxZQUFBO0lBQzdCLFdBQU07SVo4akJWLGlCQUFpQjtJQUNqQiw0QkFBNEI7SUFDNUIsY0FBYztJQUNkLCtCQUErQixFQUFFIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIG5vcm1hbGl6ZS5jc3MgdjcuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xyXG5cclxuLyogRG9jdW1lbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cclxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxyXG4gKi9cclxuXHJcbiBodG1sIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qIFNlY3Rpb25zXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICAgKi9cclxuICBcclxuICBib2R5IHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAgICovXHJcbiAgXHJcbiAgYXJ0aWNsZSxcclxuICBhc2lkZSxcclxuICBmb290ZXIsXHJcbiAgaGVhZGVyLFxyXG4gIG5hdixcclxuICBzZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAgICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICAgKi9cclxuICBcclxuICBoMSB7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIG1hcmdpbjogMC42N2VtIDA7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gICAqL1xyXG4gIFxyXG4gIGZpZ2NhcHRpb24sXHJcbiAgZmlndXJlLFxyXG4gIG1haW4geyAvKiAxICovXHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxyXG4gICAqL1xyXG4gIFxyXG4gIGZpZ3VyZSB7XHJcbiAgICBtYXJnaW46IDFlbSA0MHB4O1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gICAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gICAqL1xyXG4gIFxyXG4gIGhyIHtcclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcbiAgICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIHByZSB7XHJcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cclxuICAgIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gICAqL1xyXG4gIFxyXG4gIGEge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cclxuICAgIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxyXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgYWJiclt0aXRsZV0ge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cclxuICAgKi9cclxuICBcclxuICBiLFxyXG4gIHN0cm9uZyB7XHJcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICAgKi9cclxuICBcclxuICBiLFxyXG4gIHN0cm9uZyB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBjb2RlLFxyXG4gIGtiZCxcclxuICBzYW1wIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxyXG4gICAqL1xyXG4gIFxyXG4gIGRmbiB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cclxuICAgKi9cclxuICBcclxuICBtYXJrIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXHJcbiAgXHJcbiAgc21hbGwge1xyXG4gICAgZm9udC1zaXplOiA4MCU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gICAqIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBzdWIsXHJcbiAgc3VwIHtcclxuICAgIGZvbnQtc2l6ZTogNzUlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbiAgfVxyXG4gIFxyXG4gIHN1YiB7XHJcbiAgICBib3R0b206IC0wLjI1ZW07XHJcbiAgfVxyXG4gIFxyXG4gIHN1cCB7XHJcbiAgICB0b3A6IC0wLjVlbTtcclxuICB9XHJcbiAgXHJcbiAgLyogRW1iZWRkZWQgY29udGVudFxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAgICovXHJcbiAgXHJcbiAgYXVkaW8sXHJcbiAgdmlkZW8ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxyXG4gICAqL1xyXG4gIFxyXG4gIGF1ZGlvOm5vdChbY29udHJvbHNdKSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cclxuICAgKi9cclxuICBcclxuICBpbWcge1xyXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICAgKi9cclxuICBcclxuICBzdmc6bm90KDpyb290KSB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICBcclxuICAvKiBGb3Jtc1xyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICAgKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uLFxyXG4gIGlucHV0LFxyXG4gIG9wdGdyb3VwLFxyXG4gIHNlbGVjdCxcclxuICB0ZXh0YXJlYSB7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xyXG4gICAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXHJcbiAgICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gICAgbWFyZ2luOiAwOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxyXG4gICAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uLFxyXG4gIGlucHV0IHsgLyogMSAqL1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gICAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICAgKi9cclxuICBcclxuICBidXR0b24sXHJcbiAgc2VsZWN0IHsgLyogMSAqL1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxyXG4gICAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbixcclxuICBodG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXHJcbiAgW3R5cGU9XCJyZXNldFwiXSxcclxuICBbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuICBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuICBbdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG4gIFt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcclxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICAgKi9cclxuICBcclxuICBidXR0b246LW1vei1mb2N1c3JpbmcsXHJcbiAgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcbiAgW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcclxuICBbdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XHJcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cclxuICBcclxuICBmaWVsZHNldCB7XHJcbiAgICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBsZWdlbmQge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cclxuICAgIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cclxuICAgIHBhZGRpbmc6IDA7IC8qIDMgKi9cclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAgICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICAgKi9cclxuICBcclxuICBwcm9ncmVzcyB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxyXG4gICAqL1xyXG4gIFxyXG4gIHRleHRhcmVhIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXHJcbiAgICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICAgKi9cclxuICBcclxuICBbdHlwZT1cImNoZWNrYm94XCJdLFxyXG4gIFt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICAgcGFkZGluZzogMDsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAgICovXHJcbiAgXHJcbiAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcbiAgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICAgKi9cclxuICBcclxuICBbdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICAgKi9cclxuICBcclxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcclxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAgICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIDo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICAgIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyogSW50ZXJhY3RpdmVcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxyXG4gICAqL1xyXG4gIFxyXG4gIGRldGFpbHMsIC8qIDEgKi9cclxuICBtZW51IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBzdW1tYXJ5IHtcclxuICAgIGRpc3BsYXk6IGxpc3QtaXRlbTtcclxuICB9XHJcbiAgXHJcbiAgLyogU2NyaXB0aW5nXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICAgKi9cclxuICBcclxuICBjYW52YXMge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cclxuICAgKi9cclxuICBcclxuICB0ZW1wbGF0ZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICBcclxuICAvKiBIaWRkZW5cclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICAgKi9cclxuICBcclxuICBbaGlkZGVuXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICAiLCIvKiBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXHJcbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cclxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAgICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gICAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZm9vdGVyLFxuaGVhZGVyLFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxyXG4gICAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gICAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gICAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4ge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cclxuICAgKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXHJcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICAgKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICAgKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gICAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LSBhbmQgRmlyZWZveCAzOS0uXHJcbiAgICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICAgKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cclxuICAgKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gICAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cclxuICAgKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXHJcbiAgICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxyXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gICAqIGFsbCBicm93c2Vycy5cclxuICAgKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAgICovXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXHJcbiAgICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXHJcbiAgICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXHJcbiAgICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAgICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogRm9ybXNcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAgICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICAgKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAgICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAgICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICAgKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICAgKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAgICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxyXG4gICAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxyXG4gICAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxyXG4gICAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICAgKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxyXG4gICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxyXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAgICovXG5wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxyXG4gICAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXHJcbiAgICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICAgKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAgICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gICAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICAgKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gICAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICAgKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXHJcbiAgICovXG5kZXRhaWxzLFxubWVudSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBTY3JpcHRpbmdcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAgICovXG5jYW52YXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAgICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogSGlkZGVuXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICAgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG46cm9vdCB7XG4gIC0tbmF2SGVpZ2h0OiA2LjI1dnc7IH1cblxuaHRtbCB7XG4gIG1pbi13aWR0aDogMzAwcHg7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxudWwge1xuICBtYXJnaW46IDAgMCAxNXB4O1xuICBwYWRkaW5nOiAwOyB9XG5cbmlucHV0LFxuYnV0dG9uLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdXaGl0bmV5IEJvbGQnO1xuICBzcmM6IHVybChcIi4uLy4uL2Fzc2V0cy9mb250cy9XaGl0bmV5LUJvbGQub3RmXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnV2hpdG5leSBTZW1pYm9sZCc7XG4gIHNyYzogdXJsKFwiLi4vLi4vYXNzZXRzL2ZvbnRzL1doaXRuZXktU2VtaWJvbGQub3RmXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnV2hpdG5leSBNZWRpdW0nO1xuICBzcmM6IHVybChcIi4uLy4uL2Fzc2V0cy9mb250cy9XaGl0bmV5LU1lZGl1bS5vdGZcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuXG4udGV4dC1jb21wb25lbnQgLmNhcHRpb24ge1xuICBmb250LWZhbWlseTogJ1doaXRuZXkgU2VtaWJvbGQnO1xuICBmb250LXdlaWdodDogNjAwOyB9XG5cbi50ZXh0LWNvbXBvbmVudCBoMSwgLnRleHQtY29tcG9uZW50IGgyLCAudGV4dC1jb21wb25lbnQgaDMsIC50ZXh0LWNvbXBvbmVudCBoNCwgLnRleHQtY29tcG9uZW50IGg1LCAudGV4dC1jb21wb25lbnQgaDYsIC5hY2NvcmRpb24gLnRvZ2dsZSB7XG4gIGZvbnQtZmFtaWx5OiAnV2hpdG5leSBTZW1pYm9sZCc7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnV2hpdG5leSBNZWRpdW0nLCBzYW5zLXNlcmlmOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuYm9keSB7XG4gIC0tZ3JhZGllbnRIZWlnaHQ6IDQwMHB4O1xuICAtLWltYWdlSGVpZ2h0OiBjYWxjKDEwMHZoIC0gdmFyKC0tZ3JhZGllbnRIZWlnaHQpKTtcbiAgLS1ib2R5UGFkZGluZ1g6IDE3Ljh2dztcbiAgLS1ib2R5UGFkZGluZ0JvdHRvbTogMTUuOXZ3O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB0cmFuc3BhcmVudCB2YXIoLS1pbWFnZUhlaWdodCksIHJnYmEoMTI4LCAxNjMsIDE1NiwgMC44KSBjYWxjKHZhcigtLWltYWdlSGVpZ2h0KSArIHZhcigtLWdyYWRpZW50SGVpZ2h0KSksIHJnYmEoMTI4LCAxNjMsIDE1NiwgMC44KSksIHVybChcIi4uLy4uL2Fzc2V0cy9pbWFnZXMvcnV0aGllLTE2MzMxOC11bnNwbGFzaC5qcGdcIikgIzgwYTM5YztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwLFxyIDAgMDtcbiAgYmFja2dyb3VuZC1zaXplOiAxMDB2dyAxMDAlLFxyIGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0LFxyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGwsXHIgZml4ZWQ7XG4gIHBhZGRpbmc6IHZhcigtLW5hdkhlaWdodCkgdmFyKC0tYm9keVBhZGRpbmdYKSB2YXIoLS1ib2R5UGFkZGluZ0JvdHRvbSk7IH1cblxuI3NlY3Rpb24tdGl0bGUge1xuICAtLXNlY3Rpb25UaXRsZVNpemU6IDIuNnZ3O1xuICAtLXNlY3Rpb25UaXRsZUhlaWdodDogMTV2dztcbiAgaGVpZ2h0OiB2YXIoLS1zZWN0aW9uVGl0bGVIZWlnaHQpO1xuICBjb2xvcjogI2ZkZmZmZTtcbiAgZm9udC1zaXplOiB2YXIoLS1zZWN0aW9uVGl0bGVTaXplKTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1zaGFkb3c6IDAgMCA4cHggcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbiNzaXRlLW5hdiB7XG4gIC0tbGlzdFdpZHRoOiA0NnZ3O1xuICAtLWxpc3RTaXplOiAxdnc7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC44KSwgdHJhbnNwYXJlbnQpO1xuICBoZWlnaHQ6IHZhcigtLW5hdkhlaWdodCk7XG4gIHdpZHRoOiAxMDB2dztcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGNvbG9yOiAjZmRmZmZlO1xuICBmb250LXNpemU6IHZhcigtLWxpc3RTaXplKTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgI3NpdGUtbmF2IHVsIHtcbiAgICB3aWR0aDogdmFyKC0tbGlzdFdpZHRoKTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICNzaXRlLW5hdiBhIHtcbiAgICBjb2xvcjogI2ZkZmZmZTsgfVxuXG4jc2VhcmNoIHtcbiAgLS1zZWFyY2hSaWdodDogNXZ3O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjZmRmZmZlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IHZhcigtLXNlYXJjaFJpZ2h0KTsgfVxuXG4jbWFpbi1uYXYge1xuICAtLW1haW5OYXZIZWlnaHQ6IDcuMXZ3O1xuICAtLW1haW5OYXZNYXJnaW5Cb3R0b206IDMuNnZ3O1xuICAtLW1haW5OYXZTejogMXZ3O1xuICBoZWlnaHQ6IHZhcigtLW1haW5OYXZIZWlnaHQpO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYWluTmF2TWFyZ2luQm90dG9tKTtcbiAgZm9udC1zaXplOiB2YXIoLS1tYWluTmF2U3opOyB9XG4gICNtYWluLW5hdiB1bCB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgICNtYWluLW5hdiB1bCBsaSB7XG4gICAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAgICNtYWluLW5hdiB1bCBsaTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiYSgyNTMsIDI1NSwgMjU0LCAwLjIpOyB9XG4gICAgICAjbWFpbi1uYXYgdWwgbGk6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYmEoMjUzLCAyNTUsIDI1NCwgMC4yKTsgfVxuICAgICAgI21haW4tbmF2IHVsIGxpOm5vdCguYWN0aXZlKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDYsIDU4LCA1OCwgMC44KTsgfVxuICAgICAgI21haW4tbmF2IHVsIGxpLmFjdGl2ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNSwgOTksIDEyNSwgMC44KTsgfVxuICAgICNtYWluLW5hdiB1bCBhIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgY29sb3I6ICNmZGZmZmU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbm1haW4ge1xuICAtLW1haW5QYWRkaW5nWDogNy4xdnc7XG4gIC0tbWFpblBhZGRpbmdZOiA2Ljh2dztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IHZhcigtLW1haW5QYWRkaW5nWSkgdmFyKC0tbWFpblBhZGRpbmdYKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NiwgNTgsIDU4LCAwLjgpO1xuICBjb2xvcjogI2ZkZmZmZTsgfVxuXG4udGV4dC1jb21wb25lbnQge1xuICAtLXRleHRQYWRkaW5nWDogNi40dnc7XG4gIHBhZGRpbmc6IDAgdmFyKC0tdGV4dFBhZGRpbmdYKTsgfVxuICAudGV4dC1jb21wb25lbnQgLmNhcHRpb24ge1xuICAgIC0tY2FwdGlvbkxpbmU6IDIuNXZ3O1xuICAgIC0tY2FwdGlvblNpemU6IDEuM3Z3O1xuICAgIC0tY2FwdGlvbk1hcmdpbkJvdHRvbTogMy42dnc7XG4gICAgZm9udC1zaXplOiB2YXIoLS1jYXB0aW9uU2l6ZSk7XG4gICAgbGluZS1oZWlnaHQ6IHZhcigtLWNhcHRpb25MaW5lKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1jYXB0aW9uTWFyZ2luQm90dG9tKTsgfVxuICAudGV4dC1jb21wb25lbnQgaDEsIC50ZXh0LWNvbXBvbmVudCBoMiwgLnRleHQtY29tcG9uZW50IGgzLCAudGV4dC1jb21wb25lbnQgaDQsIC50ZXh0LWNvbXBvbmVudCBoNSwgLnRleHQtY29tcG9uZW50IGg2IHtcbiAgICAtLWhlYWRpbmdTaXplOiAxLjN2dztcbiAgICAtLWhlYWRpbmdNYXJnaW5Cb3R0b206IDJ2dztcbiAgICBmb250LXNpemU6IHZhcigtLWhlYWRpbmdTaXplKTtcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1oZWFkaW5nTWFyZ2luQm90dG9tKTsgfVxuICAudGV4dC1jb21wb25lbnQgcCB7XG4gICAgLS1wU2l6ZTogMXZ3O1xuICAgIC0tcExpbmU6IDJ2dztcbiAgICAtLXBNYXJnaW5Cb3R0b206IDEuNHZ3O1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tcFNpemUpO1xuICAgIGxpbmUtaGVpZ2h0OiB2YXIoLS1wTGluZSk7XG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tcE1hcmdpbkJvdHRvbSk7IH1cbiAgLnRleHQtY29tcG9uZW50IGEge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbi5pbWFnZS1jb21wb25lbnQge1xuICAtLWltYWdlUGFkZGluZ1RvcDogMy42dnc7XG4gIC0taW1hZ2VQYWRkaW5nQm90dG9tOiA4LjJ2dztcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogdmFyKC0taW1hZ2VQYWRkaW5nVG9wKSAwIHZhcigtLWltYWdlUGFkZGluZ0JvdHRvbSk7IH1cblxuLmFjY29yZGlvbiB7XG4gIC0tYWNjb3JkaW9uTWFyZ2luVG9wOiA1LjV2dztcbiAgbWFyZ2luLXRvcDogdmFyKC0tYWNjb3JkaW9uTWFyZ2luVG9wKTsgfVxuICAuYWNjb3JkaW9uIC50b2dnbGUge1xuICAgIC0tdG9nZ2xlSGVpZ2h0OiA3LjF2dztcbiAgICAtLXRvZ2dsZVNpemU6IDEuM3Z3O1xuICAgIC0tdG9nZ2xlUGFkZGluZ1g6IDMuNnZ3O1xuICAgIGhlaWdodDogdmFyKC0tdG9nZ2xlSGVpZ2h0KTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICNmZGZmZmU7XG4gICAgZm9udC1zaXplOiB2YXIoLS10b2dnbGVTaXplKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgyNTMsIDI1NSwgMjU0LCAwLjIpO1xuICAgIHBhZGRpbmc6IDAgdmFyKC0tdG9nZ2xlUGFkZGluZ1gpO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5hY2NvcmRpb24gLnRvZ2dsZSA+ICoge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmFjY29yZGlvbiAub3BlbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA1NjM3ZDtcbiAgICBib3JkZXI6IG5vbmU7IH1cbiAgLmFjY29yZGlvbiAudGV4dC1jb21wb25lbnQge1xuICAgIC0tdGV4dFBhZGRpbmdZOiA3dnc7XG4gICAgcGFkZGluZzogdmFyKC0tdGV4dFBhZGRpbmdZKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xuICAgIGNvbG9yOiAjMzQzNDM0OyB9XG4gIC5hY2NvcmRpb24gLnZpc3VhbGx5LWhpZGRlbiB7XG4gICAgLyogaHR0cHM6Ly9zbm9vay5jYS9hcmNoaXZlcy9odG1sX2FuZF9jc3MvaGlkaW5nLWNvbnRlbnQtZm9yLWFjY2Vzc2liaWxpdHkgKi9cbiAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICB3aWR0aDogMXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgY2xpcDogcmVjdCgxcHggMXB4IDFweCAxcHgpO1xuICAgIC8qIElFNiwgSUU3ICovXG4gICAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpOyB9XG4iLCI6cm9vdCB7XHJcbiAgICAvLyAtLW5hdkhlaWdodDogMTc1cHg7XHJcbiAgICAtLW5hdkhlaWdodDogNi4yNXZ3OyAgICBcclxufSIsImh0bWwge1xyXG4gICAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4qOmJlZm9yZSxcclxuKjphZnRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbmg2LFxyXG5wLFxyXG51bCB7XHJcbiAgICBtYXJnaW46IDAgMCAxNXB4O1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW5wdXQsXHJcbmJ1dHRvbixcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcclxuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcclxuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xyXG59IiwiQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ1doaXRuZXkgQm9sZCc7XHJcbiAgICBzcmM6IHVybCgnLi4vLi4vYXNzZXRzL2ZvbnRzL1doaXRuZXktQm9sZC5vdGYnKTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ1doaXRuZXkgU2VtaWJvbGQnO1xyXG4gICAgc3JjOiB1cmwoJy4uLy4uL2Fzc2V0cy9mb250cy9XaGl0bmV5LVNlbWlib2xkLm90ZicpO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnV2hpdG5leSBNZWRpdW0nO1xyXG4gICAgc3JjOiB1cmwoJy4uLy4uL2Fzc2V0cy9mb250cy9XaGl0bmV5LU1lZGl1bS5vdGYnKTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbiV3aGl0bmV5U2VtaSB7XHJcbiAgICBmb250LWZhbWlseTogJ1doaXRuZXkgU2VtaWJvbGQnO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgICAgXHJcbn1cclxuXHJcbiV3aGl0bmV5Qm9sZCB7XHJcbiAgICBmb250LWZhbWlseTogJ1doaXRuZXkgU2VtaWJvbGQnO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDsgICAgXHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6ICdXaGl0bmV5IE1lZGl1bScsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcbiIsImJvZHkge1xyXG4gICAgLy8gdmFycmlhYmxlc1xyXG4gICAgLS1ncmFkaWVudEhlaWdodDogNDAwcHg7XHJcbiAgICAtLWltYWdlSGVpZ2h0OiBjYWxjKDEwMHZoIC0gdmFyKC0tZ3JhZGllbnRIZWlnaHQpKTtcclxuICAgIC0tYm9keVBhZGRpbmdYOiAxNy44dnc7XHJcbiAgICAtLWJvZHlQYWRkaW5nQm90dG9tOiAxNS45dnc7XHJcblxyXG4gICAgLy8gZmlyc3QgYmFja2dyb3VuZCB2YWx1ZXMgYXJlIGZvciB0aGUgZ3JhZGllbnRcclxuICAgIC8vIHNlY29uZCBiYWNrZ3JvdW5kIHZhbHVzZSBhcmUgZm9yIHRoZSBpbWFnZVxyXG4gICAgYmFja2dyb3VuZDpcclxuICAgICAgICBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB0cmFuc3BhcmVudCB2YXIoLS1pbWFnZUhlaWdodCksICRiZyBjYWxjKHZhcigtLWltYWdlSGVpZ2h0KSArIHZhcigtLWdyYWRpZW50SGVpZ2h0KSksICRiZyksXHJcbiAgICAgICAgdXJsKCcuLi8uLi9hc3NldHMvaW1hZ2VzL3J1dGhpZS0xNjMzMTgtdW5zcGxhc2guanBnJykgIzgwYTM5YztcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IFxyXG4gICAgICAgIDAgMCxcclxuICAgICAgICAwIDA7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IFxyXG4gICAgICAgIDEwMHZ3IDEwMCUsXHJcbiAgICAgICAgY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogXHJcbiAgICAgICAgbm8tcmVwZWF0LFxyXG4gICAgICAgIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogXHJcbiAgICAgICAgc2Nyb2xsLFxyXG4gICAgICAgIGZpeGVkO1xyXG4gICAgcGFkZGluZzogdmFyKC0tbmF2SGVpZ2h0KSB2YXIoLS1ib2R5UGFkZGluZ1gpIHZhcigtLWJvZHlQYWRkaW5nQm90dG9tKTtcclxufSIsIiNzZWN0aW9uLXRpdGxlIHtcclxuICAgIC0tc2VjdGlvblRpdGxlU2l6ZTogMi42dnc7XHJcbiAgICAtLXNlY3Rpb25UaXRsZUhlaWdodDogMTV2dztcclxuICAgIC8vIC0tc2VjdGlvblRpdGxlSGVpZ2h0OiAyNnZ3O1xyXG5cclxuICAgIGhlaWdodDogdmFyKC0tc2VjdGlvblRpdGxlSGVpZ2h0KTtcclxuICAgIGNvbG9yOiAkdGV4dExpZ2h0O1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1zZWN0aW9uVGl0bGVTaXplKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHRleHQtc2hhZG93OiAwIDAgOHB4ICR0aXRsZVRleHRTaGFkb3c7XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn0iLCIvLyB0ZXh0IGNvbG9yc1xyXG4kdGV4dExpZ2h0OiAjZmRmZmZlO1xyXG4kdGV4dERhcms6ICMzNDM0MzQ7XHJcblxyXG4vLyBnZW5lcmFsXHJcbiRhY2NlbnQ6ICMwNTYzN2Q7XHJcbiRib3JkZXJMaWdodDogdHJhbnNwYXJlbnRpemUoJHRleHRMaWdodCwgMC44KTtcclxuXHJcblxyXG5cclxuLy8gZm9yIGJvZHkgXHJcbiRiZzogdHJhbnNwYXJlbnRpemUoIzgwYTM5YywgMC4yKTtcclxuXHJcbi8vIGZvciAjc2l0ZS1uYXZcclxuJG5hdkdyYWRpZW50OiByZ2JhKDAsIDAsIDAsIDAuODApO1xyXG5cclxuLy8gZm9yIGgxXHJcbiR0aXRsZVRleHRTaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC42KTtcclxuXHJcbi8vIGZvciAjbWFpbi1uYXZcclxuJG1haW5OYXZBY3RpdmU6IHRyYW5zcGFyZW50aXplKCRhY2NlbnQsIDAuMik7XHJcblxyXG4vLyBmb3IgbWFpblxyXG4kbWFpbkJveDogdHJhbnNwYXJlbnRpemUoIzJlM2EzYSwgMC4yKTtcclxuXHJcbi8vIGZvciBhY2NvcmRpb25cclxuJGFjY29yZGlvbkJnOiAjZWNlY2VjO1xyXG5cclxuXHJcbiIsIiNzaXRlLW5hdiB7XHJcbiAgICAtLWxpc3RXaWR0aDogNDZ2dztcclxuICAgIC8vIC0tbGlzdFNpemU6IDAuOXZ3O1xyXG4gICAgLS1saXN0U2l6ZTogMXZ3O1xyXG5cclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRuYXZHcmFkaWVudCwgdHJhbnNwYXJlbnQpO1xyXG4gICAgaGVpZ2h0OiB2YXIoLS1uYXZIZWlnaHQpO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGNvbG9yOiAkdGV4dExpZ2h0O1xyXG4gICAgZm9udC1zaXplOiB2YXIoLS1saXN0U2l6ZSk7XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgdWwge1xyXG4gICAgICAgIHdpZHRoOiB2YXIoLS1saXN0V2lkdGgpO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcblxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgfVxyXG4gICAgYSB7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0TGlnaHQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNzZWFyY2gge1xyXG4gICAgLy8gb2Zmc2V0IGZyb20gdmlld3BvcnQgZWRnZVxyXG4gICAgLS1zZWFyY2hSaWdodDogNXZ3O1xyXG5cclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY29sb3I6ICR0ZXh0TGlnaHQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiB2YXIoLS1zZWFyY2hSaWdodCk7XHJcbn0iLCIjbWFpbi1uYXYge1xyXG4gICAgLS1tYWluTmF2SGVpZ2h0OiA3LjF2dztcclxuICAgIC0tbWFpbk5hdk1hcmdpbkJvdHRvbTogMy42dnc7XHJcbiAgICAtLW1haW5OYXZTejogMXZ3O1xyXG5cclxuICAgIGhlaWdodDogdmFyKC0tbWFpbk5hdkhlaWdodCk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiB2YXIoLS1tYWluTmF2TWFyZ2luQm90dG9tKTtcclxuICAgIGZvbnQtc2l6ZTogdmFyKC0tbWFpbk5hdlN6KTtcclxuXHJcbiAgICB1bCB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBmbGV4LWJhc2lzOiAyNSU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgIC8vIG9ubHkgYWRkcyBib3JkZXJzIGluc2lkZSBvZiBib3hcclxuICAgICAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRib3JkZXJMaWdodDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGJvcmRlckxpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBzZXBhcmF0ZSBhY3RpdmUgYW5kIGluYWN0aXZlIG5hdiBpdGVtc1xyXG4gICAgICAgICAgICAvLyB0byBwcmV2ZW50IGFscGhhIGRvdWJsaW5nIHVwXHJcbiAgICAgICAgICAgICY6bm90KC5hY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluQm94OyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLmFjdGl2ZSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbk5hdkFjdGl2ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgLy8gZmlsbCBvdXQgYXZhaWxhYmxlIHNwYWNlIC0gZm9yIGVhc2llciBjbGlja2luZ1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBjb2xvcjogJHRleHRMaWdodDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIm1haW4ge1xyXG4gICAgLS1tYWluUGFkZGluZ1g6IDcuMXZ3O1xyXG4gICAgLS1tYWluUGFkZGluZ1k6IDYuOHZ3O1xyXG5cclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogdmFyKC0tbWFpblBhZGRpbmdZKSB2YXIoLS1tYWluUGFkZGluZ1gpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW5Cb3g7XHJcbiAgICBjb2xvcjogJHRleHRMaWdodDtcclxufSIsIi50ZXh0LWNvbXBvbmVudCB7XHJcbiAgICAtLXRleHRQYWRkaW5nWDogNi40dnc7XHJcbiAgICBcclxuICAgIHBhZGRpbmc6IDAgdmFyKC0tdGV4dFBhZGRpbmdYKTtcclxuXHJcbiAgICAuY2FwdGlvbiB7XHJcbiAgICAgICAgLS1jYXB0aW9uTGluZTogMi41dnc7XHJcbiAgICAgICAgLS1jYXB0aW9uU2l6ZTogMS4zdnc7XHJcbiAgICAgICAgLS1jYXB0aW9uTWFyZ2luQm90dG9tOiAzLjZ2dztcclxuICAgICAgICBcclxuICAgICAgICBAZXh0ZW5kICV3aGl0bmV5U2VtaTtcclxuICAgICAgICBmb250LXNpemU6IHZhcigtLWNhcHRpb25TaXplKTtcclxuICAgICAgICBsaW5lLWhlaWdodDogdmFyKC0tY2FwdGlvbkxpbmUpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IHZhcigtLWNhcHRpb25NYXJnaW5Cb3R0b20pO1xyXG4gICAgfVxyXG5cclxuICAgIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG4gICAgICAgIC0taGVhZGluZ1NpemU6IDEuM3Z3O1xyXG4gICAgICAgIC0taGVhZGluZ01hcmdpbkJvdHRvbTogMnZ3O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBleHRlbmQgJXdoaXRuZXlCb2xkO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogdmFyKC0taGVhZGluZ1NpemUpOyAgICAgICAgXHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0taGVhZGluZ01hcmdpbkJvdHRvbSk7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgLS1wU2l6ZTogMXZ3OyAgICAgICAgXHJcbiAgICAgICAgLS1wTGluZTogMnZ3O1xyXG4gICAgICAgIC0tcE1hcmdpbkJvdHRvbTogMS40dnc7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS1wU2l6ZSk7ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiB2YXIoLS1wTGluZSk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tcE1hcmdpbkJvdHRvbSk7XHJcbiAgICB9XHJcblxyXG4gICAgYSB7XHJcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICB9XHJcbn0iLCIuaW1hZ2UtY29tcG9uZW50IHtcclxuICAgIC0taW1hZ2VQYWRkaW5nVG9wOiAzLjZ2dztcclxuICAgIC0taW1hZ2VQYWRkaW5nQm90dG9tOiA4LjJ2dztcclxuXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogdmFyKC0taW1hZ2VQYWRkaW5nVG9wKSAwIHZhcigtLWltYWdlUGFkZGluZ0JvdHRvbSk7XHJcbn0iLCIuYWNjb3JkaW9uIHtcclxuICAgIC0tYWNjb3JkaW9uTWFyZ2luVG9wOiA1LjV2dztcclxuXHJcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1hY2NvcmRpb25NYXJnaW5Ub3ApO1xyXG4gICAgXHJcbiAgICAvLyBidXR0b24gZm9yIGNhcm91c2VsIGl0ZW1cclxuICAgIC50b2dnbGUge1xyXG4gICAgICAgIC0tdG9nZ2xlSGVpZ2h0OiA3LjF2dztcclxuICAgICAgICAtLXRvZ2dsZVNpemU6IDEuM3Z3O1xyXG4gICAgICAgIC0tdG9nZ2xlUGFkZGluZ1g6IDMuNnZ3O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBleHRlbmQgJXdoaXRuZXlCb2xkO1xyXG4gICAgICAgIGhlaWdodDogdmFyKC0tdG9nZ2xlSGVpZ2h0KTtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0TGlnaHQ7XHJcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS10b2dnbGVTaXplKTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGJvcmRlckxpZ2h0O1xyXG4gICAgICAgIHBhZGRpbmc6IDAgdmFyKC0tdG9nZ2xlUGFkZGluZ1gpO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICAmID4gKiB7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gb3BlbiBjYXJvdXNlbCBpdGVtIHN0eWxlc1xyXG4gICAgLm9wZW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQ7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAudGV4dC1jb21wb25lbnQge1xyXG4gICAgICAgIC0tdGV4dFBhZGRpbmdZOiA3dnc7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcGFkZGluZzogdmFyKC0tdGV4dFBhZGRpbmdZKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjb3JkaW9uQmc7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0RGFyazsgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIGNsb3NlZCBjYXJvdXNlbCBpdGVtIHN0eWxlc1xyXG4gICAgLnZpc3VhbGx5LWhpZGRlbiB7XHJcbiAgICAgICAgLyogaHR0cHM6Ly9zbm9vay5jYS9hcmNoaXZlcy9odG1sX2FuZF9jc3MvaGlkaW5nLWNvbnRlbnQtZm9yLWFjY2Vzc2liaWxpdHkgKi9cclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcclxuICAgICAgICBoZWlnaHQ6IDFweDsgXHJcbiAgICAgICAgd2lkdGg6IDFweDsgXHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBjbGlwOiByZWN0KDFweCAxcHggMXB4IDFweCk7IC8qIElFNiwgSUU3ICovXHJcbiAgICAgICAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpOyAgXHJcbiAgICB9XHJcbn0iXX0= */
